{"ast":null,"code":"var _jsxFileName = \"/Users/giannaalcasid/my-app/src/hooksExercise.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { themeContext, themes } from \"./themeContext\";\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleTheme() {\n  _s();\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n  const toggleTheme = () => {\n    setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n  };\n  return /*#__PURE__*/_jsxDEV(themeContext.Provider, {\n    value: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \"Toggle Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ClickCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(ToggleTheme, \"XUkQGtkba25k8FAF8WwW2uStAco=\");\n_c = ToggleTheme;\nexport default ToggleTheme;\nexport function ClickCounter() {\n  _s2();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n  const theme = useContext(themeContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground,\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      style: {\n        background: theme.foreground,\n        color: theme.background\n      },\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s2(ClickCounter, \"QwTh87uW/LikTGP2WSDizL9Txl8=\");\n_c2 = ClickCounter;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleTheme\");\n$RefreshReg$(_c2, \"ClickCounter\");","map":{"version":3,"names":["React","useEffect","useState","themeContext","themes","useContext","jsxDEV","_jsxDEV","ToggleTheme","_s","currentTheme","setCurrentTheme","light","toggleTheme","dark","Provider","value","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ClickCounter","_c","_s2","count","setCount","document","title","theme","style","background","color","foreground","padding","_c2","$RefreshReg$"],"sources":["/Users/giannaalcasid/my-app/src/hooksExercise.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { themeContext, themes } from \"./themeContext\";\nimport { useContext } from 'react';\n\nfunction ToggleTheme() {\n    const [currentTheme, setCurrentTheme] = useState(themes.light);\n\n    const toggleTheme = () => {\n        setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n    };\n\n    return (\n        <themeContext.Provider value={currentTheme}>\n            <button onClick={toggleTheme}>Toggle Theme</button>\n            <ClickCounter/>\n        </themeContext.Provider>\n    );\n}\n\nexport default ToggleTheme;\n\nexport function ClickCounter() {\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        document.title = `You clicked ${count} times`;\n    }, [count]);\n\n    const theme = useContext(themeContext);\n\n    return (\n        <div style={{background: theme.background, color: theme.foreground, padding: \"20px\",}}>\n            <p>You clicked {count} times</p>\n            <button onClick={() => setCount(count + 1)} style={{background: theme.foreground, color: theme.background}}>Click me!</button>\n        </div>\n    );\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,MAAM,QAAQ,gBAAgB;AACrD,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAACE,MAAM,CAACQ,KAAK,CAAC;EAE9D,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBF,eAAe,CAACD,YAAY,KAAKN,MAAM,CAACQ,KAAK,GAAGR,MAAM,CAACU,IAAI,GAAGV,MAAM,CAACQ,KAAK,CAAC;EAC/E,CAAC;EAED,oBACIL,OAAA,CAACJ,YAAY,CAACY,QAAQ;IAACC,KAAK,EAAEN,YAAa;IAAAO,QAAA,gBACvCV,OAAA;MAAQW,OAAO,EAAEL,WAAY;MAAAI,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDf,OAAA,CAACgB,YAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEhC;AAACb,EAAA,CAbQD,WAAW;AAAAgB,EAAA,GAAXhB,WAAW;AAepB,eAAeA,WAAW;AAE1B,OAAO,SAASe,YAAYA,CAAA,EAAG;EAAAE,GAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAErCD,SAAS,CAAC,MAAM;IACZ2B,QAAQ,CAACC,KAAK,GAAG,eAAeH,KAAK,QAAQ;EACjD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMI,KAAK,GAAGzB,UAAU,CAACF,YAAY,CAAC;EAEtC,oBACII,OAAA;IAAKwB,KAAK,EAAE;MAACC,UAAU,EAAEF,KAAK,CAACE,UAAU;MAAEC,KAAK,EAAEH,KAAK,CAACI,UAAU;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAlB,QAAA,gBAClFV,OAAA;MAAAU,QAAA,GAAG,cAAY,EAACS,KAAK,EAAC,QAAM;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAChCf,OAAA;MAAQW,OAAO,EAAEA,CAAA,KAAMS,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MAACK,KAAK,EAAE;QAACC,UAAU,EAAEF,KAAK,CAACI,UAAU;QAAED,KAAK,EAAEH,KAAK,CAACE;MAAU,CAAE;MAAAf,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7H,CAAC;AAEd;AAACG,GAAA,CAfeF,YAAY;AAAAa,GAAA,GAAZb,YAAY;AAAA,IAAAC,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}